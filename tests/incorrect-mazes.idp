// 4 walls
structure SI1 : V_maze_student {
    X = { 0..8 }
    Y = { 0..8 }
    Wall = { P(0, 0); P(2, 0); P(3, 0); P(4, 0); P(5, 0); P(6, 0); P(7, 0); P(8, 0); P(0, 1); P(2, 1); P(8, 1); P(0, 2); P(2, 2); P(3, 1); P(3, 2); P(4, 2); P(5, 2); P(6, 2); P(8, 2); P(0, 3); P(8, 3); P(0, 4); P(1, 4); P(2, 4); P(3, 4); P(4, 4); P(5, 4); P(6, 4); P(8, 4); P(0, 5); P(2, 5); P(6, 5); P(8, 5); P(0, 6); P(2, 6); P(4, 6); P(6, 6); P(8, 6); P(0, 7); P(4, 7); P(8, 7); P(0, 8); P(1, 8); P(2, 8); P(3, 8); P(4, 8); P(5, 8); P(6, 8); P(8, 8);  }
    Entrance = P(1, 0)
    Exit = P(7, 8)
}

// 4 non-walls
structure SI2 : V_maze_student {
    X = { 0..8 }
    Y = { 0..8 }
    Wall = { P(0, 0); P(2, 0); P(3, 0); P(4, 0); P(5, 0); P(6, 0); P(7, 0); P(8, 0); P(0, 1); P(2, 1); P(8, 1); P(0, 2); P(2, 2); P(3, 2); P(4, 2); P(6, 2); P(7, 2); P(8, 2); P(0, 3); P(4, 3); P(8, 3); P(0, 4); P(1, 4); P(2, 4); P(4, 4); P(5, 4); P(6, 4); P(8, 4); P(0, 5); P(2, 5); P(6, 5); P(8, 5); P(0, 6); P(2, 6); P(3, 6); P(4, 6); P(8, 6); P(0, 7); P(8, 7); P(0, 8); P(1, 8); P(2, 8); P(3, 8); P(4, 8); P(5, 8); P(6, 8); P(8, 8);  }
    Entrance = P(1, 0)
    Exit = P(7, 8)
}

// Disconnected walls
structure SI3 : V_maze_student {
    X = { 0..6 }
    Y = { 0..6 }
    Wall = { P(0, 0); P(2, 0); P(3, 0); P(4, 0); P(5, 0); P(6, 0); P(0, 1); P(6, 1); P(0, 2); P(2, 2); P(3, 2); P(4, 2); P(6, 2); P(0, 3); P(4, 3); P(6, 3); P(0, 4); P(2, 4); P(4, 4); P(6, 4); P(0, 5); P(2, 5); P(6, 5); P(0, 6); P(1, 6); P(2, 6); P(3, 6); P(4, 6); P(6, 6);  }
    Entrance = P(1, 0)
    Exit = P(5, 6)
}

// Unreachable cells
structure SI4 : V_maze_student {
    X = { 0..10 }
    Y = { 0..10 }
    Wall = { P(0, 0); P(2, 0); P(3, 0); P(4, 0); P(5, 0); P(6, 0); P(7, 0); P(8, 0); P(9, 0); P(10, 0); P(0, 1); P(2, 1); P(10, 1); P(0, 2); P(2, 2); P(3, 2); P(4, 2); P(6, 2); P(7, 2); P(8, 2); P(10, 2); P(0, 3); P(4, 3); P(6, 3); P(10, 3); P(0, 4); P(1, 4); P(2, 4); P(4, 4); P(5, 4); P(6, 4); P(8, 4); P(9, 4); P(10, 4); P(0, 5); P(2, 5); P(6, 5); P(10, 5); P(0, 6); P(2, 6); P(3, 6); P(4, 6); P(6, 6); P(7, 6); P(8, 6); P(10, 6); P(0, 7); P(4, 7); P(8, 3); P(8, 7); P(10, 7); P(0, 8); P(2, 8); P(3, 8); P(4, 8); P(5, 8); P(6, 8); P(8, 8); P(10, 8); P(0, 9); P(10, 9); P(0, 10); P(1, 10); P(2, 10); P(3, 10); P(4, 10); P(5, 10); P(6, 10); P(7, 10); P(8, 10); P(10, 10);  }
    Entrance = P(1, 0)
    Exit = P(9, 10)
}
